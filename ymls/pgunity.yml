#!/bin/bash
#
# Title:      Reference Title File - PGBlitz
# Author(s):  Admin9705 & https://github.com/PGBlitz/PGClone/graphs/contributors - Deiteq
# URL:        https://pgblitz.com - http://github.pgblitz.com
# GNU:        General Public License v3.0
################################################################################
---
- hosts: localhost
  gather_facts: false
  tasks:
    - name: include PGClone aliases
      include_tasks: '/pg/pgclone/ymls/alias.yml'

    - debug: msg="PGBlitz Type - {{transport}}"
    - debug: msg="HD Path - {{hdpath}}"

    - name: 'If Fact Matches - SDrive Encrypted'
      set_fact:
        path: 'remotes = gd: sd: gc: sc: {{hdpath}}/move'
      when: transport == "sc"

    - name: 'If Fact Matches - GDrive Encrypted'
      set_fact:
        path: 'remotes = gd: gc: {{hdpath}}/move'
      when: transport == "gc"

    - name: 'If Fact Matches - SDrive Unencrypted'
      set_fact:
        path: 'remotes = gd: sd: {{hdpath}}/move'
      when: transport == "sd"

    - name: 'If Fact Matches - GDrive Unencrypted'
      set_fact:
        path: 'remotes = gd: {{hdpath}}/move'
      when: transport == "gd"

    - name: Creating required paths
      file: 'path={{hdpath}}/{{item}} state=directory mode=0775 owner=1000 group=1000 recurse=true'
      with_items:
        - 'move'
        - 'downloads'
        - 'incomplete'

    - name: Creating Logs Path
      file: 'path=/pg/{{item}} state=directory mode=0775 owner=1000 group=1000 recurse=true'
      with_items:
        - 'logs'

    - name: 'Setting ownership on logs'
      shell: 'chown -R 1000:1000 /pg/logs'

    - name: 'Setting ownership'
      shell: 'chown -R 1000:1000 {{hdpath}}/{{item}}'
      with_items:
        - 'move'
        - 'downloads'
        - 'incomplete'

    - name: 'Setting permissions'
      shell: 'chmod -R 775 {{hdpath}}/{{item}}'
      with_items:
        - 'move'
        - 'downloads'
        - 'incomplete'

    - name: Transport Type
      shell: 'echo "" >> /pg/rclone/blitz.conf'

    - name: Line Rmur
      shell: 'sed -i -e "/\[(unionfs|pgunity)\]/,+2d" /pg/rclone/blitz.conf'

    - name: Transport Type
      shell: |
        echo "[pgunity]" >> /pg/rclone/blitz.conf
        echo "type = union" >> /pg/rclone/blitz.conf
        echo "{{path}}" >> /pg/rclone/blitz.conf

    - name: 'PG Blitz Execution'
      block:

        - name: Bandwidth Limit
          shell: 'cat /pg/var/blitz.bw'
          register: bandwidth

        - name: Install Transfer Script
          template:
            src: /pg/pgclone/source/transfer.sh
            dest: /pg/rclone/transfer.sh
            force: yes

        - name: Install Loop Script
          template:
            src: /pg/pgclone/source/loop.sh
            dest: /pg/rclone/loop.sh
            force: yes

        - name: Install Transfer Service
          template:
            src: /pg/pgclone/mounts/transfer.service
            dest: /etc/systemd/system/transfer.service
            force: yes

        - name: Reload Transfer Service
          systemd:
            daemon_reload: yes
            enabled: yes
            state: reloaded
            name: transfer

      when: (transport == "gd") or
        (transport == "gc")

    - name: 'PG Move Execution'
      block:
        - name: Bandwidth Limit
          shell: 'cat /pg/var/move.bw'
          register: bandwidth

        - name: Deploy Version
          shell: 'cat /pg/rclone/deploy.version'
          register: ver

        - name: Register HD Path
          shell: 'cat /pg/var/server.hd.path'
          register: hdpath

        - name: Install Transfer Script
          template:
            src: /pg/pgclone/source/transfer.sh
            dest: /pg/rclone/transfer.sh
            force: yes

        - name: Install Loop Script
          template:
            src: /pg/pgclone/source/loop.sh
            dest: /pg/rclone/loop.sh
            force: yes

        - name: Install Transfer Service
          template:
            src: /pg/pgclone/mounts/transfer.service
            dest: /etc/systemd/system/transfer.service
            force: yes

        - name: Reload Transfer Service
          systemd:
            daemon_reload: yes
            enabled: yes
            state: reloaded
            name: transfer

      when: (transport == "sc") or
        (transport == "sd")

    - name: Install PGUnity Script
      template:
        src: /pg/pgclone/source/pgunity.sh
        dest: /pg/rclone/pgunity.sh
        force: yes

    - name: Install PGUnity Service
      template:
        src: /pg/pgclone/mounts/pgunity.service
        dest: /etc/systemd/system/pgunity.service
        force: yes

    - name: Reload PGUnity Service
      systemd:
        daemon_reload: yes
        enabled: yes
        state: reloaded
        name: pgunity

    - name: 'Waiting for PGUnity to initialize'
      wait_for:
        path: /pg/unity/plexguide
        timeout: 15
        delay: 2

    - name: Register HD Path
      shell: 'cat /pg/var/server.hd.path'
      register: hdpath

    - name: Restart All Docker Containers
      shell: docker restart $(docker ps -a -q)
